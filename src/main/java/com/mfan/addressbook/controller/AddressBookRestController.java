package com.mfan.addressbook.controller;

import com.mfan.addressbook.model.AddressBook;
import com.mfan.addressbook.model.BuddyInfo;
import com.mfan.addressbook.repository.AddressBookRepository;
import com.mfan.addressbook.repository.BuddyInfoRepository;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

/**
 * These methods mimic the endpoints generated by the Repository. The endpoints generated by the Repository can be
 * used instead to perform CRUD operations on AddressBook and BuddyInfo.
 *
 * For example, a get request to /addressbook/new is the same as a post request to /addressBooks.
 *
 * @author Michael Fan 101029934
 */
@RestController
public class AddressBookRestController {
    private AddressBookRepository addressBookRepository;
    private BuddyInfoRepository buddyInfoRepository;

    public AddressBookRestController(AddressBookRepository addressBookRepository, BuddyInfoRepository buddyInfoRepository) {
        this.addressBookRepository = addressBookRepository;
        this.buddyInfoRepository = buddyInfoRepository;
    }

    @GetMapping("/addressbook/all")
    public Iterable<AddressBook> allAddressBooks() {
        return addressBookRepository.findAll();
    }

    @GetMapping("/addressbook/{id}")
    public AddressBook getAddressBook(@PathVariable long id) {
        return addressBookRepository.findById(id);
    }

    @PostMapping("/addressbook/new")
    public AddressBook createAddressBook() {
        AddressBook addressBook = new AddressBook();
        return addressBookRepository.save(addressBook);
    }

    @PostMapping("/addressbook/{id}/addBuddy")
    public AddressBook addBuddy(@PathVariable long id, @RequestBody BuddyInfo buddyInfo) {
        AddressBook addressBook = addressBookRepository.findById(id);

        if(addressBook == null) return null;

        buddyInfo.setAddressBook(addressBook);
        buddyInfoRepository.save(buddyInfo);
        addressBook.add(buddyInfo);

        return addressBookRepository.save(addressBook);
    }

    @DeleteMapping("/addressbook/{addressBookId}/removeBuddy/{buddyId}")
    public AddressBook removeBuddy(@PathVariable long addressBookId, @PathVariable long buddyId) {
        AddressBook addressBook = addressBookRepository.findById(addressBookId);
        BuddyInfo buddyInfo = buddyInfoRepository.findById(buddyId);

        if(addressBook == null || buddyInfo == null)  return null;

        addressBook.remove(buddyInfo.getId());
        buddyInfoRepository.delete(buddyInfo);

        return addressBookRepository.save(addressBook);
    }
}
